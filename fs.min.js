// (c) 2011 Enginimation Studio (http://enginimation.com).
// fs.js may be freely distributed under the MIT license.
"use strict";var global=this,fs;global.requestFileSystem=global.requestFileSystem||global.webkitRequestFileSystem,global.BlobBuilder=global.BlobBuilder||global.WebKitBlobBuilder,global.resolveLocalFileSystemURL=global.resolveLocalFileSystemURL||global.webkitResolveLocalFileSystemURL,global.fsURL=global.URL||global.webkitURL,fs=Object.create({},{version:{value:"0.9"},log:{value:!1,writable:!0},maxSize:{value:10695475200,writable:!0},FILE_EXPECTED:{value:50},BROWSER_NOT_SUPPORTED:{value:51},getNativeFS:{value:function(a,b){if(global.requestFileSystem){var c=global.PERSISTENT;b&&b.tmp&&(c=global.TEMPORARY),global.requestFileSystem(c,this.maxSize,function(b){a(undefined,b)},function(b){a(b)})}else a(fs.BROWSER_NOT_SUPPORTED)}},createBlob:{value:function(a,b){var c=new global.BlobBuilder;c.append(a);return c.getBlob(b)}},base64StringToBlob:{value:function(a,b){var c=global.atob(a),d=c.length,e=new global.Int8Array(d),f=0;for(f=0;f<d;f++)e[f]=c.charCodeAt(f);return this.createBlob(e.buffer,b)}}}),"use strict",Object.defineProperty(global.File.prototype,"shortName",{value:function(){var a=this.name.lastIndexOf(".");return this.name.substring(0,a)}}),Object.defineProperty(global.File.prototype,"extension",{value:function(){var a=this.name.lastIndexOf(".");return this.name.substring(a)}}),Object.defineProperty(global.File.prototype,"sizeInKB",{value:function(){return(this.size/1014).toFixed(1)}}),Object.defineProperty(global.File.prototype,"sizeInMB",{value:function(){return(this.size/1038336).toFixed(1)}}),Object.defineProperty(global.File.prototype,"sizeInGB",{value:function(){return(this.size/1063256064).toFixed(1)}}),Object.defineProperty(global.FileError.prototype,"message",{value:function(){var a=this.code;return a}}),"use strict",fs.io=Object.create({},{createFile:{value:function(a,b){fs.util.getFileFromRoot(a,b,{})}},createTmpFile:{value:function(a,b){fs.util.getFileFromRoot(a,b,{tmp:!0})}},createDirectory:{value:function(a,b){fs.util.getDirectoryFromRoot(a,b,{})}},createTmpDirectory:{value:function(a,b){fs.util.getDirectoryFromRoot(a,b,{tmp:!0})}},readDirectory:{value:function(a,b){fs.util.getDirectory(a,function(a,c){a?b(a):fs.util.readEntriesFromDirectory(c,b)},{})}},readRootDirectory:{value:function(a){fs.getNativeFS(function(b,c){b?a(b):fs.util.readEntriesFromDirectory(c.root,a)},{})}}}),"use strict",fs.util=Object.create({},{getReader:{value:function(a,b,c){var d=new global.FileReader,e=a;d.onloadend=function(a){b(undefined,this.result,e)},d[c](e)}},getFile:{value:function(a,b,c){a.getFile(b,{create:!0},function(a){c(undefined,a)},function(a){c(a)})}},getDirectory:{value:function(a,b,c){c(undefined,a.getDirectory(b,{create:!0}))}},getDirectoryFromRoot:{value:function(a,b,c){fs.getNativeFS(function(c,d){c?b(c):fs.util.getDirectory(d.root,a,b)},c)}},readEntriesFromDirectory:{value:function(a,b){var c=a.createReader();c.readEntries(function(a){b(undefined,a)},function(a){b(a)})}},readAsArrayBuffer:{value:function(a,b,c){this.getReaderUsingFileName(a,b,"readAsArrayBuffer",c)}},readFileAsArrayBuffer:{value:function(a,b){this.getReader(a,b,"readAsArrayBuffer")}},readAsBinaryString:{value:function(a,b,c){this.getReaderUsingFileName(a,b,"readAsBinaryString",c)}},readFileAsBinaryString:{value:function(a,b){this.getReader(a,b,"readAsBinaryString")}},readAsDataUrl:{value:function(a,b,c){this.getReaderUsingFileName(a,b,"readAsDataURL",c)}},readAsText:{value:function(a,b,c){this.getReaderUsingFileName(a,b,"readAsText",c)}},writeBase64StrToFile:{value:function(a,b,c,d,e){var f=fs.base64StringToBlob(b,c);this.writeBlobToFile(a,f,d,e)}},writeBlobToFile:{value:function(a,b,c,d){this.getFileFromRoot(a,function(a,d){a?c(a):d.createWriter(function(a){console.log(b),console.log(a);var c=new WebKitBlobBuilder;c.append("xx"),a.write(c.getBlob())},function(a){c(a)})},d)}},writeTextToFile:{value:function(a,b,c,d){var e=fs.createBlob(b,"text/plain");fs.util.writeBlobToFile(a,e,c,d)}},writeArrayBufferToFile:{value:function(a,b,c,d,e){var f=fs.createBlob(c,b);fs.util.writeBlobToFile(a,f,d,e)}},writeFileToFile:{value:function(a,b,c){this.getFileFromRoot(fileName,function(c,d){c?b(c):d.createWriter(function(b){console.log(blob),console.log(b),b.write(a)},function(a){b(a)})},c)}},getReaderUsingFileName:{value:function(a,b,c,d){fs.getNativeFS(function(d,e){d?b(d):e.root.getFile(a,{},function(a){a.isFile===!0?a.file(function(a){fs.util.getReader(a,b,c)},function(a){b(a)}):b(fs.FILE_EXPECTED)},function(a){b(a)})},d)}},getFileFromRoot:{value:function(a,b,c){fs.getNativeFS(function(c,d){c?b(c):fs.util.getFile(d.root,a,b)},c)}},createFileURL:{value:function(a,b){fs.util.getFileFromRoot(a,function(a,c){c.file(function(a){var c=fsURL.createObjectURL(a);b(c)})})}},destroyFileURL:{value:function(a){fsURL.revokeObjectURL(a)}},remove:{value:function(a,b){this.getFileFromRoot(a,function(a,c){c.remove(function(){b(undefined)},function(a){b(a)})})}}}),"use strict",fs.read=Object.create({},{asDataUrl:{value:function(a,b){fs.util.readAsDataUrl(a,b,{})}},tmpFileAsDataUrl:{value:function(a,b){fs.util.readAsDataUrl(a,b,{tmp:!0})}},asText:{value:function(a,b){fs.util.readAsText(a,b,{})}},tmpFileAsText:{value:function(a,b){fs.util.readAsText(a,b,{tmp:!0})}},asBinaryString:{value:function(a,b){fs.util.readAsBinaryString(a,b,{})}},tmpFileAsBinaryString:{value:function(a,b){fs.util.readAsBinaryString(a,b,{tmp:!0})}},asArrayBuffer:{value:function(a,b){fs.util.readAsArrayBuffer(a,b,{})}},tmpFileAsArrayBuffer:{value:function(a,b){fs.util.readAsArrayBuffer(a,b,{tmp:!0})}},fileAsText:{value:function(a,b){fs.util.getReader(a,b,"readAsText")}},fileAsDataURL:{value:function(a,b){fs.util.getReader(a,b,"readAsDataURL")}},fileAsArrayBuffer:{value:function(a,b){fs.util.readFileAsArrayBuffer(a,b)}},fileAsBinaryString:{value:function(a,b){fs.util.readFileAsBinaryString(a,b)}}}),"use strict",fs.write=Object.create({},{file:{value:function(a,b,c){fs.util.writeFileToFile(a,b,{filename:c})}},fileToTmpFile:{value:function(a,b,c){fs.util.writeFileToFile(a,b,{tmp:!0})}},blob:{value:function(a,b,c){fs.util.writeBlobToFile(a,b,c,{})}},blobToTmpFile:{value:function(a,b,c){fs.util.writeBlobToFile(a,b,c,{tmp:!0})}},text:{value:function(a,b,c){fs.util.writeTextToFile(a,b,c,{})}},textToTmpFile:{value:function(a,b,c){fs.util.writeTextToFile(a,b,c,{tmp:!0})}},base64Str:{value:function(a,b,c,d){fs.util.writeBase64StrToFile(a,b,c,d,{})}},base64StrToTmpFile:{value:function(a,b,c,d){fs.util.writeBase64StrToFile(a,b,c,d,{tmp:!0})}}})